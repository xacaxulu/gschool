#This code solves the problem propose at:  http://puzzlenode.com/puzzles/7-blue-hawaii

require 'json'
require 'date'

input_date = File.read("./input.txt")
id = input_date.split(" - ")

commence = id[0]
termine = id[1]
c = commence.split("/")
t = termine.split("/")
cin_t = 15
cout_t = 11	

vac_c = DateTime.new(c[0].to_i, c[1].to_i, c[2].to_i, cin_t, 00)
vac_t = DateTime.new(t[0].to_i, t[1].to_i, t[2].to_i, cout_t, 00)

vac_entier = Range.new(vac_c, vac_t)

apartments = JSON.parse(File.read("./vacation_rentals.json"))

apartments.each do |apt|
name = apt['name']
c_fee = apt['cleaning fee']	
seasons = apt['seasons']
if c_fee
  xa = c_fee.slice(1..-1)
end

totale = 0

if seasons
seasons.each do |season|
season.keys.each do |season_name|
start_raw = season[season_name]['start']
end_raw = season[season_name]['end']
rate = season[season_name]['rate']

start_month, start_day = start_raw.split('-')	
end_month, end_day = end_raw.split('-')	
rate = rate.slice(1..-1).to_i

start_date = DateTime.new(2011, start_month.to_i, start_day.to_i, 15,00)
end_date = DateTime.new(2011, end_month.to_i, end_day.to_i, 11,00)

if start_date.month > end_date.month
year = start_date.year + 1
else
year = start_date.year
end

ss = DateTime.new(start_date.year, start_date.month, start_date.day, 15,00)
se = DateTime.new(year, end_date.month, end_date.day, 11,00)
saison = Range.new(ss, se)

vac_entier.each do |datetime|
if saison.include?(datetime)
totale += rate
end
end
end	
end
total = (totale + xa.to_i)*1.0411416
puts "#{name}: $#{sprintf("%.2f", total)}"
puts ""
end
end



